Paths

Line commands

"Move To" or M

M x y
(or)
m dx dy

=================================

There are three commands that draw lines. The most generic is the "Line To" command, 
called with L. L takes two parameters—x and y coordinates—and draws a line from 
the current position to a new position.

L x y
(or)
l dx dy

=================================

There are two abbreviated forms for drawing horizontal and vertical lines. 
H draws a horizontal line, and V draws a vertical line. Both commands only take 
one parameter since they only move in one direction.

H x
(or)
h dx

V y
(or)
v dy

=================================

We can shorten the above path declaration a little bit by using the "Close Path" command, 
called with Z. This command draws a straight line from the current position back to 
the first point of the path. It is often placed at the end of a path node, although not 
always. There is no difference between the uppercase and lowercase command.

Z
(or)
z

=================================

The relative forms of these commands can also be used to draw the same picture. 
Relative commands are called by using lowercase letters, and rather than moving the cursor 
to an exact coordinate, they move it relative to its last position. For instance, 
since our rectangle is 80×80, the <path> element could have been written as:

=================================

Curve commands

Bézier Curves

The cubic curve, C, is the slightly more complex curve. Cubic Béziers take in two control 
points for each point. Therefore, to create a cubic Bézier, three sets of coordinates 
need to be specified.

C x1 y1, x2 y2, x y
(or)
c dx1 dy1, dx2 dy2, dx dy

The last set of coordinates here (x, y) specify where the line should end. The other two 
are control points. (x1, y1) is the control point for the start of the curve, 
and (x2, y2) is the control point for the end. The control points essentially describe 
the slope of the line starting at each point. The Bézier function then creates a smooth 
curve that transfers from the slope established at the beginning of the line, to the slope 
at the other end.

=================================

Several Bézier curves can be strung together to create extended, smooth shapes. 
Often, the control point on one side of a point will be a reflection of the control point 
used on the other side to keep the slope constant. In this case, a shortcut version of 
the cubic Bézier can be used, designated by the command S (or s).

S x2 y2, x y
(or)
s dx2 dy2, dx dy

=================================

The other type of Bézier curve, the quadratic curve called with Q, is actually a simpler 
curve than the cubic one. It requires one control point which determines the slope of 
the curve at both the start point and the end point. It takes two parameters: 
the control point and the end point of the curve.

Q x1 y1, x y
(or)
q dx1 dy1, dx dy

=================================

As with the cubic Bézier curve, there is a shortcut for stringing together multiple quadratic 
Béziers, called with T.

T x y
(or)
t dx dy

=================================

Arcs

For a given x-radius and y-radius, there are two ellipses that can connect any two points 
(as long as they're within the radius of the circle). Along either of those circles, 
there are two possible paths that can be taken to connect the points—so in any situation, 
there are four possible arcs available.

Because of that, arcs require quite a few parameters:

A rx ry x-axis-rotation large-arc-flag sweep-flag x y
a rx ry x-axis-rotation large-arc-flag sweep-flag dx dy

At its start, the arc element takes in two parameters for the x-radius and y-radius. 
If needed, see <ellipse>s and how they behave. The final two parameters designate 
the x and y coordinates to end the stroke. Together, these four values define the basic 
structure of the arc.

The third parameter describes the rotation of the arc. This is best explained with 
an example:

=================================
